"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/siwe";
exports.ids = ["vendor-chunks/siwe"];
exports.modules = {

/***/ "(ssr)/../../node_modules/siwe/dist/client.js":
/*!**********************************************!*\
  !*** ../../node_modules/siwe/dist/client.js ***!
  \**********************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.SiweMessage = void 0;\n// TODO: Figure out how to get types from this lib:\nconst siwe_parser_1 = __webpack_require__(/*! @spruceid/siwe-parser */ \"(ssr)/../../node_modules/@spruceid/siwe-parser/dist/parsers.js\");\nconst uri = __importStar(__webpack_require__(/*! valid-url */ \"(ssr)/../../node_modules/valid-url/index.js\"));\nconst ethersCompat_1 = __webpack_require__(/*! ./ethersCompat */ \"(ssr)/../../node_modules/siwe/dist/ethersCompat.js\");\nconst types_1 = __webpack_require__(/*! ./types */ \"(ssr)/../../node_modules/siwe/dist/types.js\");\nconst utils_1 = __webpack_require__(/*! ./utils */ \"(ssr)/../../node_modules/siwe/dist/utils.js\");\nclass SiweMessage {\n    /**\n     * Creates a parsed Sign-In with Ethereum Message (EIP-4361) object from a\n     * string or an object. If a string is used an ABNF parser is called to\n     * validate the parameter, otherwise the fields are attributed.\n     * @param param {string | SiweMessage} Sign message as a string or an object.\n     */\n    constructor(param) {\n        if (typeof param === 'string') {\n            const parsedMessage = new siwe_parser_1.ParsedMessage(param);\n            this.scheme = parsedMessage.scheme;\n            this.domain = parsedMessage.domain;\n            this.address = parsedMessage.address;\n            this.statement = parsedMessage.statement;\n            this.uri = parsedMessage.uri;\n            this.version = parsedMessage.version;\n            this.nonce = parsedMessage.nonce;\n            this.issuedAt = parsedMessage.issuedAt;\n            this.expirationTime = parsedMessage.expirationTime;\n            this.notBefore = parsedMessage.notBefore;\n            this.requestId = parsedMessage.requestId;\n            this.chainId = parsedMessage.chainId;\n            this.resources = parsedMessage.resources;\n        }\n        else {\n            this.scheme = param === null || param === void 0 ? void 0 : param.scheme;\n            this.domain = param.domain;\n            this.address = param.address;\n            this.statement = param === null || param === void 0 ? void 0 : param.statement;\n            this.uri = param.uri;\n            this.version = param.version;\n            this.chainId = param.chainId;\n            this.nonce = param.nonce;\n            this.issuedAt = param === null || param === void 0 ? void 0 : param.issuedAt;\n            this.expirationTime = param === null || param === void 0 ? void 0 : param.expirationTime;\n            this.notBefore = param === null || param === void 0 ? void 0 : param.notBefore;\n            this.requestId = param === null || param === void 0 ? void 0 : param.requestId;\n            this.resources = param === null || param === void 0 ? void 0 : param.resources;\n            if (typeof this.chainId === 'string') {\n                this.chainId = (0, siwe_parser_1.parseIntegerNumber)(this.chainId);\n            }\n        }\n        this.nonce = this.nonce || (0, utils_1.generateNonce)();\n        this.validateMessage();\n    }\n    /**\n     * This function can be used to retrieve an EIP-4361 formated message for\n     * signature, although you can call it directly it's advised to use\n     * [prepareMessage()] instead which will resolve to the correct method based\n     * on the [type] attribute of this object, in case of other formats being\n     * implemented.\n     * @returns {string} EIP-4361 formated message, ready for EIP-191 signing.\n     */\n    toMessage() {\n        /** Validates all fields of the object */\n        this.validateMessage();\n        const headerPrefx = this.scheme ? `${this.scheme}://${this.domain}` : this.domain;\n        const header = `${headerPrefx} wants you to sign in with your Ethereum account:`;\n        const uriField = `URI: ${this.uri}`;\n        let prefix = [header, this.address].join('\\n');\n        const versionField = `Version: ${this.version}`;\n        if (!this.nonce) {\n            this.nonce = (0, utils_1.generateNonce)();\n        }\n        const chainField = `Chain ID: ` + this.chainId || 0;\n        const nonceField = `Nonce: ${this.nonce}`;\n        const suffixArray = [uriField, versionField, chainField, nonceField];\n        this.issuedAt = this.issuedAt || new Date().toISOString();\n        suffixArray.push(`Issued At: ${this.issuedAt}`);\n        if (this.expirationTime) {\n            const expiryField = `Expiration Time: ${this.expirationTime}`;\n            suffixArray.push(expiryField);\n        }\n        if (this.notBefore) {\n            suffixArray.push(`Not Before: ${this.notBefore}`);\n        }\n        if (this.requestId) {\n            suffixArray.push(`Request ID: ${this.requestId}`);\n        }\n        if (this.resources) {\n            suffixArray.push([`Resources:`, ...this.resources.map(x => `- ${x}`)].join('\\n'));\n        }\n        const suffix = suffixArray.join('\\n');\n        prefix = [prefix, this.statement].join('\\n\\n');\n        if (this.statement) {\n            prefix += '\\n';\n        }\n        return [prefix, suffix].join('\\n');\n    }\n    /**\n     * This method parses all the fields in the object and creates a messaging for signing\n     * message according with the type defined.\n     * @returns {string} Returns a message ready to be signed according with the\n     * type defined in the object.\n     */\n    prepareMessage() {\n        let message;\n        switch (this.version) {\n            case '1': {\n                message = this.toMessage();\n                break;\n            }\n            default: {\n                message = this.toMessage();\n                break;\n            }\n        }\n        return message;\n    }\n    /**\n     * @deprecated\n     * Verifies the integrity of the object by matching its signature.\n     * @param signature Signature to match the address in the message.\n     * @param provider Ethers provider to be used for EIP-1271 validation\n     */\n    validate(signature, provider) {\n        return __awaiter(this, void 0, void 0, function* () {\n            console.warn('validate() has been deprecated, please update your code to use verify(). validate() may be removed in future versions.');\n            return this.verify({ signature }, { provider, suppressExceptions: false })\n                .then(({ data }) => data)\n                .catch(({ error }) => {\n                throw error;\n            });\n        });\n    }\n    /**\n     * Verifies the integrity of the object by matching its signature.\n     * @param params Parameters to verify the integrity of the message, signature is required.\n     * @returns {Promise<SiweMessage>} This object if valid.\n     */\n    verify(params, opts = { suppressExceptions: false }) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                var _a, _b, _c;\n                const fail = result => {\n                    if (opts.suppressExceptions) {\n                        return resolve(result);\n                    }\n                    else {\n                        return reject(result);\n                    }\n                };\n                const invalidParams = (0, utils_1.checkInvalidKeys)(params, types_1.VerifyParamsKeys);\n                if (invalidParams.length > 0) {\n                    fail({\n                        success: false,\n                        data: this,\n                        error: new Error(`${invalidParams.join(', ')} is/are not valid key(s) for VerifyParams.`),\n                    });\n                }\n                const invalidOpts = (0, utils_1.checkInvalidKeys)(opts, types_1.VerifyOptsKeys);\n                if (invalidParams.length > 0) {\n                    fail({\n                        success: false,\n                        data: this,\n                        error: new Error(`${invalidOpts.join(', ')} is/are not valid key(s) for VerifyOpts.`),\n                    });\n                }\n                const { signature, scheme, domain, nonce, time } = params;\n                /** Scheme for domain binding */\n                if (scheme && scheme !== this.scheme) {\n                    fail({\n                        success: false,\n                        data: this,\n                        error: new types_1.SiweError(types_1.SiweErrorType.SCHEME_MISMATCH, scheme, this.scheme),\n                    });\n                }\n                /** Domain binding */\n                if (domain && domain !== this.domain) {\n                    fail({\n                        success: false,\n                        data: this,\n                        error: new types_1.SiweError(types_1.SiweErrorType.DOMAIN_MISMATCH, domain, this.domain),\n                    });\n                }\n                /** Nonce binding */\n                if (nonce && nonce !== this.nonce) {\n                    fail({\n                        success: false,\n                        data: this,\n                        error: new types_1.SiweError(types_1.SiweErrorType.NONCE_MISMATCH, nonce, this.nonce),\n                    });\n                }\n                /** Check time or now */\n                const checkTime = new Date(time || new Date());\n                /** Message not expired */\n                if (this.expirationTime) {\n                    const expirationDate = new Date(this.expirationTime);\n                    if (checkTime.getTime() >= expirationDate.getTime()) {\n                        fail({\n                            success: false,\n                            data: this,\n                            error: new types_1.SiweError(types_1.SiweErrorType.EXPIRED_MESSAGE, `${checkTime.toISOString()} < ${expirationDate.toISOString()}`, `${checkTime.toISOString()} >= ${expirationDate.toISOString()}`),\n                        });\n                    }\n                }\n                /** Message is valid already */\n                if (this.notBefore) {\n                    const notBefore = new Date(this.notBefore);\n                    if (checkTime.getTime() < notBefore.getTime()) {\n                        fail({\n                            success: false,\n                            data: this,\n                            error: new types_1.SiweError(types_1.SiweErrorType.NOT_YET_VALID_MESSAGE, `${checkTime.toISOString()} >= ${notBefore.toISOString()}`, `${checkTime.toISOString()} < ${notBefore.toISOString()}`),\n                        });\n                    }\n                }\n                let EIP4361Message;\n                try {\n                    EIP4361Message = this.prepareMessage();\n                }\n                catch (e) {\n                    fail({\n                        success: false,\n                        data: this,\n                        error: e,\n                    });\n                }\n                /** Recover address from signature */\n                let addr;\n                try {\n                    addr = (0, ethersCompat_1.verifyMessage)(EIP4361Message, signature);\n                }\n                catch (e) {\n                    console.error(e);\n                }\n                /** Match signature with message's address */\n                if (addr === this.address) {\n                    return resolve({\n                        success: true,\n                        data: this,\n                    });\n                }\n                else {\n                    const EIP1271Promise = (0, utils_1.checkContractWalletSignature)(this, signature, opts.provider)\n                        .then(isValid => {\n                        if (!isValid) {\n                            return {\n                                success: false,\n                                data: this,\n                                error: new types_1.SiweError(types_1.SiweErrorType.INVALID_SIGNATURE, addr, `Resolved address to be ${this.address}`),\n                            };\n                        }\n                        return {\n                            success: true,\n                            data: this,\n                        };\n                    })\n                        .catch(error => {\n                        return {\n                            success: false,\n                            data: this,\n                            error,\n                        };\n                    });\n                    Promise.all([\n                        EIP1271Promise,\n                        (_c = (_b = (_a = opts === null || opts === void 0 ? void 0 : opts.verificationFallback) === null || _a === void 0 ? void 0 : _a.call(opts, params, opts, this, EIP1271Promise)) === null || _b === void 0 ? void 0 : _b.then(res => res)) === null || _c === void 0 ? void 0 : _c.catch((res) => res),\n                    ]).then(([EIP1271Response, fallbackResponse]) => {\n                        if (fallbackResponse) {\n                            if (fallbackResponse.success) {\n                                return resolve(fallbackResponse);\n                            }\n                            else {\n                                fail(fallbackResponse);\n                            }\n                        }\n                        else {\n                            if (EIP1271Response.success) {\n                                return resolve(EIP1271Response);\n                            }\n                            else {\n                                fail(EIP1271Response);\n                            }\n                        }\n                    });\n                }\n            });\n        });\n    }\n    /**\n     * Validates the values of this object fields.\n     * @throws Throws an {ErrorType} if a field is invalid.\n     */\n    validateMessage(...args) {\n        var _a;\n        /** Checks if the user might be using the function to verify instead of validate. */\n        if (args.length > 0) {\n            throw new types_1.SiweError(types_1.SiweErrorType.UNABLE_TO_PARSE, `Unexpected argument in the validateMessage function.`);\n        }\n        /** `domain` check. */\n        if (!this.domain ||\n            this.domain.length === 0 ||\n            !/[^#?]*/.test(this.domain)) {\n            throw new types_1.SiweError(types_1.SiweErrorType.INVALID_DOMAIN, `${this.domain} to be a valid domain.`);\n        }\n        /** EIP-55 `address` check. */\n        if (!(0, siwe_parser_1.isEIP55Address)(this.address)) {\n            throw new types_1.SiweError(types_1.SiweErrorType.INVALID_ADDRESS, (0, ethersCompat_1.getAddress)(this.address), this.address);\n        }\n        /** Check if the URI is valid. */\n        if (!uri.isUri(this.uri)) {\n            throw new types_1.SiweError(types_1.SiweErrorType.INVALID_URI, `${this.uri} to be a valid uri.`);\n        }\n        /** Check if the version is 1. */\n        if (this.version !== '1') {\n            throw new types_1.SiweError(types_1.SiweErrorType.INVALID_MESSAGE_VERSION, '1', this.version);\n        }\n        /** Check if the nonce is alphanumeric and bigger then 8 characters */\n        const nonce = (_a = this === null || this === void 0 ? void 0 : this.nonce) === null || _a === void 0 ? void 0 : _a.match(/[a-zA-Z0-9]{8,}/);\n        if (!nonce || this.nonce.length < 8 || nonce[0] !== this.nonce) {\n            throw new types_1.SiweError(types_1.SiweErrorType.INVALID_NONCE, `Length > 8 (${nonce.length}). Alphanumeric.`, this.nonce);\n        }\n        /** `issuedAt` conforms to ISO-8601 and is a valid date. */\n        if (this.issuedAt) {\n            if (!(0, utils_1.isValidISO8601Date)(this.issuedAt)) {\n                throw new Error(types_1.SiweErrorType.INVALID_TIME_FORMAT);\n            }\n        }\n        /** `expirationTime` conforms to ISO-8601 and is a valid date. */\n        if (this.expirationTime) {\n            if (!(0, utils_1.isValidISO8601Date)(this.expirationTime)) {\n                throw new Error(types_1.SiweErrorType.INVALID_TIME_FORMAT);\n            }\n        }\n        /** `notBefore` conforms to ISO-8601 and is a valid date. */\n        if (this.notBefore) {\n            if (!(0, utils_1.isValidISO8601Date)(this.notBefore)) {\n                throw new Error(types_1.SiweErrorType.INVALID_TIME_FORMAT);\n            }\n        }\n    }\n}\nexports.SiweMessage = SiweMessage;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/siwe/dist/client.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/siwe/dist/ethersCompat.js":
/*!****************************************************!*\
  !*** ../../node_modules/siwe/dist/ethersCompat.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.getAddress = exports.hashMessage = exports.verifyMessage = void 0;\nconst ethers_1 = __webpack_require__(/*! ethers */ \"(ssr)/../../node_modules/ethers/lib.commonjs/index.js\");\nlet ethersVerifyMessage = null;\nlet ethersHashMessage = null;\nlet ethersGetAddress = null;\ntry {\n    // @ts-expect-error -- v6 compatibility hack\n    ethersVerifyMessage = ethers_1.ethers.utils.verifyMessage;\n    // @ts-expect-error -- v6 compatibility hack\n    ethersHashMessage = ethers_1.ethers.utils.hashMessage;\n    // @ts-expect-error -- v6 compatibility hack\n    ethersGetAddress = ethers_1.ethers.utils.getAddress;\n}\ncatch (_a) {\n    ethersVerifyMessage = ethers_1.ethers.verifyMessage;\n    ethersHashMessage = ethers_1.ethers.hashMessage;\n    ethersGetAddress = ethers_1.ethers.getAddress;\n}\nexports.verifyMessage = ethersVerifyMessage;\nexports.hashMessage = ethersHashMessage;\nexports.getAddress = ethersGetAddress;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzL3Npd2UvZGlzdC9ldGhlcnNDb21wYXQuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsa0JBQWtCLEdBQUcsbUJBQW1CLEdBQUcscUJBQXFCO0FBQ2hFLGlCQUFpQixtQkFBTyxDQUFDLHFFQUFRO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCO0FBQ3JCLG1CQUFtQjtBQUNuQixrQkFBa0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AYml0bWFpbC9kZXNrdG9wLy4uLy4uL25vZGVfbW9kdWxlcy9zaXdlL2Rpc3QvZXRoZXJzQ29tcGF0LmpzPzJlZDAiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmdldEFkZHJlc3MgPSBleHBvcnRzLmhhc2hNZXNzYWdlID0gZXhwb3J0cy52ZXJpZnlNZXNzYWdlID0gdm9pZCAwO1xuY29uc3QgZXRoZXJzXzEgPSByZXF1aXJlKFwiZXRoZXJzXCIpO1xubGV0IGV0aGVyc1ZlcmlmeU1lc3NhZ2UgPSBudWxsO1xubGV0IGV0aGVyc0hhc2hNZXNzYWdlID0gbnVsbDtcbmxldCBldGhlcnNHZXRBZGRyZXNzID0gbnVsbDtcbnRyeSB7XG4gICAgLy8gQHRzLWV4cGVjdC1lcnJvciAtLSB2NiBjb21wYXRpYmlsaXR5IGhhY2tcbiAgICBldGhlcnNWZXJpZnlNZXNzYWdlID0gZXRoZXJzXzEuZXRoZXJzLnV0aWxzLnZlcmlmeU1lc3NhZ2U7XG4gICAgLy8gQHRzLWV4cGVjdC1lcnJvciAtLSB2NiBjb21wYXRpYmlsaXR5IGhhY2tcbiAgICBldGhlcnNIYXNoTWVzc2FnZSA9IGV0aGVyc18xLmV0aGVycy51dGlscy5oYXNoTWVzc2FnZTtcbiAgICAvLyBAdHMtZXhwZWN0LWVycm9yIC0tIHY2IGNvbXBhdGliaWxpdHkgaGFja1xuICAgIGV0aGVyc0dldEFkZHJlc3MgPSBldGhlcnNfMS5ldGhlcnMudXRpbHMuZ2V0QWRkcmVzcztcbn1cbmNhdGNoIChfYSkge1xuICAgIGV0aGVyc1ZlcmlmeU1lc3NhZ2UgPSBldGhlcnNfMS5ldGhlcnMudmVyaWZ5TWVzc2FnZTtcbiAgICBldGhlcnNIYXNoTWVzc2FnZSA9IGV0aGVyc18xLmV0aGVycy5oYXNoTWVzc2FnZTtcbiAgICBldGhlcnNHZXRBZGRyZXNzID0gZXRoZXJzXzEuZXRoZXJzLmdldEFkZHJlc3M7XG59XG5leHBvcnRzLnZlcmlmeU1lc3NhZ2UgPSBldGhlcnNWZXJpZnlNZXNzYWdlO1xuZXhwb3J0cy5oYXNoTWVzc2FnZSA9IGV0aGVyc0hhc2hNZXNzYWdlO1xuZXhwb3J0cy5nZXRBZGRyZXNzID0gZXRoZXJzR2V0QWRkcmVzcztcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/siwe/dist/ethersCompat.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/siwe/dist/siwe.js":
/*!********************************************!*\
  !*** ../../node_modules/siwe/dist/siwe.js ***!
  \********************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n__exportStar(__webpack_require__(/*! ./client */ \"(ssr)/../../node_modules/siwe/dist/client.js\"), exports);\n__exportStar(__webpack_require__(/*! ./types */ \"(ssr)/../../node_modules/siwe/dist/types.js\"), exports);\n__exportStar(__webpack_require__(/*! ./utils */ \"(ssr)/../../node_modules/siwe/dist/utils.js\"), exports);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzL3Npd2UvZGlzdC9zaXdlLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLG9DQUFvQztBQUNuRDtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGFBQWEsbUJBQU8sQ0FBQyw4REFBVTtBQUMvQixhQUFhLG1CQUFPLENBQUMsNERBQVM7QUFDOUIsYUFBYSxtQkFBTyxDQUFDLDREQUFTIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQGJpdG1haWwvZGVza3RvcC8uLi8uLi9ub2RlX21vZHVsZXMvc2l3ZS9kaXN0L3Npd2UuanM/ZDg4YyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2NyZWF0ZUJpbmRpbmcgPSAodGhpcyAmJiB0aGlzLl9fY3JlYXRlQmluZGluZykgfHwgKE9iamVjdC5jcmVhdGUgPyAoZnVuY3Rpb24obywgbSwgaywgazIpIHtcbiAgICBpZiAoazIgPT09IHVuZGVmaW5lZCkgazIgPSBrO1xuICAgIHZhciBkZXNjID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihtLCBrKTtcbiAgICBpZiAoIWRlc2MgfHwgKFwiZ2V0XCIgaW4gZGVzYyA/ICFtLl9fZXNNb2R1bGUgOiBkZXNjLndyaXRhYmxlIHx8IGRlc2MuY29uZmlndXJhYmxlKSkge1xuICAgICAgZGVzYyA9IHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbigpIHsgcmV0dXJuIG1ba107IH0gfTtcbiAgICB9XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG8sIGsyLCBkZXNjKTtcbn0pIDogKGZ1bmN0aW9uKG8sIG0sIGssIGsyKSB7XG4gICAgaWYgKGsyID09PSB1bmRlZmluZWQpIGsyID0gaztcbiAgICBvW2syXSA9IG1ba107XG59KSk7XG52YXIgX19leHBvcnRTdGFyID0gKHRoaXMgJiYgdGhpcy5fX2V4cG9ydFN0YXIpIHx8IGZ1bmN0aW9uKG0sIGV4cG9ydHMpIHtcbiAgICBmb3IgKHZhciBwIGluIG0pIGlmIChwICE9PSBcImRlZmF1bHRcIiAmJiAhT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGV4cG9ydHMsIHApKSBfX2NyZWF0ZUJpbmRpbmcoZXhwb3J0cywgbSwgcCk7XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL2NsaWVudFwiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vdHlwZXNcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL3V0aWxzXCIpLCBleHBvcnRzKTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/siwe/dist/siwe.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/siwe/dist/types.js":
/*!*********************************************!*\
  !*** ../../node_modules/siwe/dist/types.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.SiweErrorType = exports.SiweError = exports.VerifyOptsKeys = exports.VerifyParamsKeys = void 0;\nexports.VerifyParamsKeys = [\n    'signature',\n    'scheme',\n    'domain',\n    'nonce',\n    'time',\n];\nexports.VerifyOptsKeys = [\n    'provider',\n    'suppressExceptions',\n    'verificationFallback',\n];\n/**\n * Interface used to return errors in SiweResponses.\n */\nclass SiweError {\n    constructor(type, expected, received) {\n        this.type = type;\n        this.expected = expected;\n        this.received = received;\n    }\n}\nexports.SiweError = SiweError;\n/**\n * Possible message error types.\n */\nvar SiweErrorType;\n(function (SiweErrorType) {\n    /** `expirationTime` is present and in the past. */\n    SiweErrorType[\"EXPIRED_MESSAGE\"] = \"Expired message.\";\n    /** `domain` is not a valid authority or is empty. */\n    SiweErrorType[\"INVALID_DOMAIN\"] = \"Invalid domain.\";\n    /** `scheme` don't match the scheme provided for verification. */\n    SiweErrorType[\"SCHEME_MISMATCH\"] = \"Scheme does not match provided scheme for verification.\";\n    /** `domain` don't match the domain provided for verification. */\n    SiweErrorType[\"DOMAIN_MISMATCH\"] = \"Domain does not match provided domain for verification.\";\n    /** `nonce` don't match the nonce provided for verification. */\n    SiweErrorType[\"NONCE_MISMATCH\"] = \"Nonce does not match provided nonce for verification.\";\n    /** `address` does not conform to EIP-55 or is not a valid address. */\n    SiweErrorType[\"INVALID_ADDRESS\"] = \"Invalid address.\";\n    /** `uri` does not conform to RFC 3986. */\n    SiweErrorType[\"INVALID_URI\"] = \"URI does not conform to RFC 3986.\";\n    /** `nonce` is smaller then 8 characters or is not alphanumeric */\n    SiweErrorType[\"INVALID_NONCE\"] = \"Nonce size smaller then 8 characters or is not alphanumeric.\";\n    /** `notBefore` is present and in the future. */\n    SiweErrorType[\"NOT_YET_VALID_MESSAGE\"] = \"Message is not valid yet.\";\n    /** Signature doesn't match the address of the message. */\n    SiweErrorType[\"INVALID_SIGNATURE\"] = \"Signature does not match address of the message.\";\n    /** `expirationTime`, `notBefore` or `issuedAt` not complient to ISO-8601. */\n    SiweErrorType[\"INVALID_TIME_FORMAT\"] = \"Invalid time format.\";\n    /** `version` is not 1. */\n    SiweErrorType[\"INVALID_MESSAGE_VERSION\"] = \"Invalid message version.\";\n    /** Thrown when some required field is missing. */\n    SiweErrorType[\"UNABLE_TO_PARSE\"] = \"Unable to parse the message.\";\n})(SiweErrorType = exports.SiweErrorType || (exports.SiweErrorType = {}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzL3Npd2UvZGlzdC90eXBlcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxxQkFBcUIsR0FBRyxpQkFBaUIsR0FBRyxzQkFBc0IsR0FBRyx3QkFBd0I7QUFDN0Ysd0JBQXdCO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQjtBQUN0QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyw0Q0FBNEMscUJBQXFCLEtBQUsiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AYml0bWFpbC9kZXNrdG9wLy4uLy4uL25vZGVfbW9kdWxlcy9zaXdlL2Rpc3QvdHlwZXMuanM/MjllMiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuU2l3ZUVycm9yVHlwZSA9IGV4cG9ydHMuU2l3ZUVycm9yID0gZXhwb3J0cy5WZXJpZnlPcHRzS2V5cyA9IGV4cG9ydHMuVmVyaWZ5UGFyYW1zS2V5cyA9IHZvaWQgMDtcbmV4cG9ydHMuVmVyaWZ5UGFyYW1zS2V5cyA9IFtcbiAgICAnc2lnbmF0dXJlJyxcbiAgICAnc2NoZW1lJyxcbiAgICAnZG9tYWluJyxcbiAgICAnbm9uY2UnLFxuICAgICd0aW1lJyxcbl07XG5leHBvcnRzLlZlcmlmeU9wdHNLZXlzID0gW1xuICAgICdwcm92aWRlcicsXG4gICAgJ3N1cHByZXNzRXhjZXB0aW9ucycsXG4gICAgJ3ZlcmlmaWNhdGlvbkZhbGxiYWNrJyxcbl07XG4vKipcbiAqIEludGVyZmFjZSB1c2VkIHRvIHJldHVybiBlcnJvcnMgaW4gU2l3ZVJlc3BvbnNlcy5cbiAqL1xuY2xhc3MgU2l3ZUVycm9yIHtcbiAgICBjb25zdHJ1Y3Rvcih0eXBlLCBleHBlY3RlZCwgcmVjZWl2ZWQpIHtcbiAgICAgICAgdGhpcy50eXBlID0gdHlwZTtcbiAgICAgICAgdGhpcy5leHBlY3RlZCA9IGV4cGVjdGVkO1xuICAgICAgICB0aGlzLnJlY2VpdmVkID0gcmVjZWl2ZWQ7XG4gICAgfVxufVxuZXhwb3J0cy5TaXdlRXJyb3IgPSBTaXdlRXJyb3I7XG4vKipcbiAqIFBvc3NpYmxlIG1lc3NhZ2UgZXJyb3IgdHlwZXMuXG4gKi9cbnZhciBTaXdlRXJyb3JUeXBlO1xuKGZ1bmN0aW9uIChTaXdlRXJyb3JUeXBlKSB7XG4gICAgLyoqIGBleHBpcmF0aW9uVGltZWAgaXMgcHJlc2VudCBhbmQgaW4gdGhlIHBhc3QuICovXG4gICAgU2l3ZUVycm9yVHlwZVtcIkVYUElSRURfTUVTU0FHRVwiXSA9IFwiRXhwaXJlZCBtZXNzYWdlLlwiO1xuICAgIC8qKiBgZG9tYWluYCBpcyBub3QgYSB2YWxpZCBhdXRob3JpdHkgb3IgaXMgZW1wdHkuICovXG4gICAgU2l3ZUVycm9yVHlwZVtcIklOVkFMSURfRE9NQUlOXCJdID0gXCJJbnZhbGlkIGRvbWFpbi5cIjtcbiAgICAvKiogYHNjaGVtZWAgZG9uJ3QgbWF0Y2ggdGhlIHNjaGVtZSBwcm92aWRlZCBmb3IgdmVyaWZpY2F0aW9uLiAqL1xuICAgIFNpd2VFcnJvclR5cGVbXCJTQ0hFTUVfTUlTTUFUQ0hcIl0gPSBcIlNjaGVtZSBkb2VzIG5vdCBtYXRjaCBwcm92aWRlZCBzY2hlbWUgZm9yIHZlcmlmaWNhdGlvbi5cIjtcbiAgICAvKiogYGRvbWFpbmAgZG9uJ3QgbWF0Y2ggdGhlIGRvbWFpbiBwcm92aWRlZCBmb3IgdmVyaWZpY2F0aW9uLiAqL1xuICAgIFNpd2VFcnJvclR5cGVbXCJET01BSU5fTUlTTUFUQ0hcIl0gPSBcIkRvbWFpbiBkb2VzIG5vdCBtYXRjaCBwcm92aWRlZCBkb21haW4gZm9yIHZlcmlmaWNhdGlvbi5cIjtcbiAgICAvKiogYG5vbmNlYCBkb24ndCBtYXRjaCB0aGUgbm9uY2UgcHJvdmlkZWQgZm9yIHZlcmlmaWNhdGlvbi4gKi9cbiAgICBTaXdlRXJyb3JUeXBlW1wiTk9OQ0VfTUlTTUFUQ0hcIl0gPSBcIk5vbmNlIGRvZXMgbm90IG1hdGNoIHByb3ZpZGVkIG5vbmNlIGZvciB2ZXJpZmljYXRpb24uXCI7XG4gICAgLyoqIGBhZGRyZXNzYCBkb2VzIG5vdCBjb25mb3JtIHRvIEVJUC01NSBvciBpcyBub3QgYSB2YWxpZCBhZGRyZXNzLiAqL1xuICAgIFNpd2VFcnJvclR5cGVbXCJJTlZBTElEX0FERFJFU1NcIl0gPSBcIkludmFsaWQgYWRkcmVzcy5cIjtcbiAgICAvKiogYHVyaWAgZG9lcyBub3QgY29uZm9ybSB0byBSRkMgMzk4Ni4gKi9cbiAgICBTaXdlRXJyb3JUeXBlW1wiSU5WQUxJRF9VUklcIl0gPSBcIlVSSSBkb2VzIG5vdCBjb25mb3JtIHRvIFJGQyAzOTg2LlwiO1xuICAgIC8qKiBgbm9uY2VgIGlzIHNtYWxsZXIgdGhlbiA4IGNoYXJhY3RlcnMgb3IgaXMgbm90IGFscGhhbnVtZXJpYyAqL1xuICAgIFNpd2VFcnJvclR5cGVbXCJJTlZBTElEX05PTkNFXCJdID0gXCJOb25jZSBzaXplIHNtYWxsZXIgdGhlbiA4IGNoYXJhY3RlcnMgb3IgaXMgbm90IGFscGhhbnVtZXJpYy5cIjtcbiAgICAvKiogYG5vdEJlZm9yZWAgaXMgcHJlc2VudCBhbmQgaW4gdGhlIGZ1dHVyZS4gKi9cbiAgICBTaXdlRXJyb3JUeXBlW1wiTk9UX1lFVF9WQUxJRF9NRVNTQUdFXCJdID0gXCJNZXNzYWdlIGlzIG5vdCB2YWxpZCB5ZXQuXCI7XG4gICAgLyoqIFNpZ25hdHVyZSBkb2Vzbid0IG1hdGNoIHRoZSBhZGRyZXNzIG9mIHRoZSBtZXNzYWdlLiAqL1xuICAgIFNpd2VFcnJvclR5cGVbXCJJTlZBTElEX1NJR05BVFVSRVwiXSA9IFwiU2lnbmF0dXJlIGRvZXMgbm90IG1hdGNoIGFkZHJlc3Mgb2YgdGhlIG1lc3NhZ2UuXCI7XG4gICAgLyoqIGBleHBpcmF0aW9uVGltZWAsIGBub3RCZWZvcmVgIG9yIGBpc3N1ZWRBdGAgbm90IGNvbXBsaWVudCB0byBJU08tODYwMS4gKi9cbiAgICBTaXdlRXJyb3JUeXBlW1wiSU5WQUxJRF9USU1FX0ZPUk1BVFwiXSA9IFwiSW52YWxpZCB0aW1lIGZvcm1hdC5cIjtcbiAgICAvKiogYHZlcnNpb25gIGlzIG5vdCAxLiAqL1xuICAgIFNpd2VFcnJvclR5cGVbXCJJTlZBTElEX01FU1NBR0VfVkVSU0lPTlwiXSA9IFwiSW52YWxpZCBtZXNzYWdlIHZlcnNpb24uXCI7XG4gICAgLyoqIFRocm93biB3aGVuIHNvbWUgcmVxdWlyZWQgZmllbGQgaXMgbWlzc2luZy4gKi9cbiAgICBTaXdlRXJyb3JUeXBlW1wiVU5BQkxFX1RPX1BBUlNFXCJdID0gXCJVbmFibGUgdG8gcGFyc2UgdGhlIG1lc3NhZ2UuXCI7XG59KShTaXdlRXJyb3JUeXBlID0gZXhwb3J0cy5TaXdlRXJyb3JUeXBlIHx8IChleHBvcnRzLlNpd2VFcnJvclR5cGUgPSB7fSkpO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/siwe/dist/types.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/siwe/dist/utils.js":
/*!*********************************************!*\
  !*** ../../node_modules/siwe/dist/utils.js ***!
  \*********************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.checkInvalidKeys = exports.isValidISO8601Date = exports.generateNonce = exports.checkContractWalletSignature = void 0;\nconst random_1 = __webpack_require__(/*! @stablelib/random */ \"(ssr)/../../node_modules/@stablelib/random/lib/random.js\");\n// @ts-expect-error -- ethers v6 compatibility hack\nconst ethers_1 = __webpack_require__(/*! ethers */ \"(ssr)/../../node_modules/ethers/lib.commonjs/index.js\");\nconst ethersCompat_1 = __webpack_require__(/*! ./ethersCompat */ \"(ssr)/../../node_modules/siwe/dist/ethersCompat.js\");\nconst EIP1271_ABI = [\n    'function isValidSignature(bytes32 _message, bytes _signature) public view returns (bytes4)',\n];\nconst EIP1271_MAGICVALUE = '0x1626ba7e';\nconst ISO8601 = /^(?<date>[0-9]{4}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01]))[Tt]([01][0-9]|2[0-3]):([0-5][0-9]):([0-5][0-9]|60)(.[0-9]+)?(([Zz])|([+|-]([01][0-9]|2[0-3]):[0-5][0-9]))$/;\n/**\n * This method calls the EIP-1271 method for Smart Contract wallets\n * @param message The EIP-4361 parsed message\n * @param provider Web3 provider able to perform a contract check (Web3/EthersJS).\n * @returns {Promise<boolean>} Checks for the smart contract (if it exists) if\n * the signature is valid for given address.\n */\nconst checkContractWalletSignature = (message, signature, provider) => __awaiter(void 0, void 0, void 0, function* () {\n    if (!provider) {\n        return false;\n    }\n    const walletContract = new ethers_1.Contract(message.address, EIP1271_ABI, provider);\n    const hashedMessage = (0, ethersCompat_1.hashMessage)(message.prepareMessage());\n    const res = yield walletContract.isValidSignature(hashedMessage, signature);\n    return res === EIP1271_MAGICVALUE;\n});\nexports.checkContractWalletSignature = checkContractWalletSignature;\n/**\n * This method leverages a native CSPRNG with support for both browser and Node.js\n * environments in order generate a cryptographically secure nonce for use in the\n * SiweMessage in order to prevent replay attacks.\n *\n * 96 bits has been chosen as a number to sufficiently balance size and security considerations\n * relative to the lifespan of it's usage.\n *\n * @returns cryptographically generated random nonce with 96 bits of entropy encoded with\n * an alphanumeric character set.\n */\nconst generateNonce = () => {\n    const nonce = (0, random_1.randomStringForEntropy)(96);\n    if (!nonce || nonce.length < 8) {\n        throw new Error('Error during nonce creation.');\n    }\n    return nonce;\n};\nexports.generateNonce = generateNonce;\n/**\n * This method matches the given date string against the ISO-8601 regex and also\n * performs checks if it's a valid date.\n * @param inputDate any string to be validated against ISO-8601\n * @returns boolean indicating if the providade date is valid and conformant to ISO-8601\n */\nconst isValidISO8601Date = (inputDate) => {\n    /* Split groups and make sure inputDate is in ISO8601 format */\n    const inputMatch = ISO8601.exec(inputDate);\n    /* if inputMatch is null the date is not ISO-8601 */\n    if (!inputDate) {\n        return false;\n    }\n    /* Creates a date object with input date to parse for invalid days e.g. Feb, 30 -> Mar, 01 */\n    const inputDateParsed = new Date(inputMatch.groups.date).toISOString();\n    /* Get groups from new parsed date to compare with the original input */\n    const parsedInputMatch = ISO8601.exec(inputDateParsed);\n    /* Compare remaining fields */\n    return inputMatch.groups.date === parsedInputMatch.groups.date;\n};\nexports.isValidISO8601Date = isValidISO8601Date;\nconst checkInvalidKeys = (obj, keys) => {\n    const invalidKeys = [];\n    Object.keys(obj).forEach(key => {\n        if (!keys.includes(key)) {\n            invalidKeys.push(key);\n        }\n    });\n    return invalidKeys;\n};\nexports.checkInvalidKeys = checkInvalidKeys;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzL3Npd2UvZGlzdC91dGlscy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0EsNEJBQTRCLCtEQUErRCxpQkFBaUI7QUFDNUc7QUFDQSxvQ0FBb0MsTUFBTSwrQkFBK0IsWUFBWTtBQUNyRixtQ0FBbUMsTUFBTSxtQ0FBbUMsWUFBWTtBQUN4RixnQ0FBZ0M7QUFDaEM7QUFDQSxLQUFLO0FBQ0w7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsd0JBQXdCLEdBQUcsMEJBQTBCLEdBQUcscUJBQXFCLEdBQUcsb0NBQW9DO0FBQ3BILGlCQUFpQixtQkFBTyxDQUFDLG1GQUFtQjtBQUM1QztBQUNBLGlCQUFpQixtQkFBTyxDQUFDLHFFQUFRO0FBQ2pDLHVCQUF1QixtQkFBTyxDQUFDLDBFQUFnQjtBQUMvQztBQUNBO0FBQ0E7QUFDQTtBQUNBLGdDQUFnQyxFQUFFO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYSxrQkFBa0I7QUFDL0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Qsb0NBQW9DO0FBQ3BDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQjtBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMEJBQTBCO0FBQzFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0Esd0JBQXdCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQGJpdG1haWwvZGVza3RvcC8uLi8uLi9ub2RlX21vZHVsZXMvc2l3ZS9kaXN0L3V0aWxzLmpzP2M0ZmUiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19hd2FpdGVyID0gKHRoaXMgJiYgdGhpcy5fX2F3YWl0ZXIpIHx8IGZ1bmN0aW9uICh0aGlzQXJnLCBfYXJndW1lbnRzLCBQLCBnZW5lcmF0b3IpIHtcbiAgICBmdW5jdGlvbiBhZG9wdCh2YWx1ZSkgeyByZXR1cm4gdmFsdWUgaW5zdGFuY2VvZiBQID8gdmFsdWUgOiBuZXcgUChmdW5jdGlvbiAocmVzb2x2ZSkgeyByZXNvbHZlKHZhbHVlKTsgfSk7IH1cbiAgICByZXR1cm4gbmV3IChQIHx8IChQID0gUHJvbWlzZSkpKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHtcbiAgICAgICAgZnVuY3Rpb24gZnVsZmlsbGVkKHZhbHVlKSB7IHRyeSB7IHN0ZXAoZ2VuZXJhdG9yLm5leHQodmFsdWUpKTsgfSBjYXRjaCAoZSkgeyByZWplY3QoZSk7IH0gfVxuICAgICAgICBmdW5jdGlvbiByZWplY3RlZCh2YWx1ZSkgeyB0cnkgeyBzdGVwKGdlbmVyYXRvcltcInRocm93XCJdKHZhbHVlKSk7IH0gY2F0Y2ggKGUpIHsgcmVqZWN0KGUpOyB9IH1cbiAgICAgICAgZnVuY3Rpb24gc3RlcChyZXN1bHQpIHsgcmVzdWx0LmRvbmUgPyByZXNvbHZlKHJlc3VsdC52YWx1ZSkgOiBhZG9wdChyZXN1bHQudmFsdWUpLnRoZW4oZnVsZmlsbGVkLCByZWplY3RlZCk7IH1cbiAgICAgICAgc3RlcCgoZ2VuZXJhdG9yID0gZ2VuZXJhdG9yLmFwcGx5KHRoaXNBcmcsIF9hcmd1bWVudHMgfHwgW10pKS5uZXh0KCkpO1xuICAgIH0pO1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuY2hlY2tJbnZhbGlkS2V5cyA9IGV4cG9ydHMuaXNWYWxpZElTTzg2MDFEYXRlID0gZXhwb3J0cy5nZW5lcmF0ZU5vbmNlID0gZXhwb3J0cy5jaGVja0NvbnRyYWN0V2FsbGV0U2lnbmF0dXJlID0gdm9pZCAwO1xuY29uc3QgcmFuZG9tXzEgPSByZXF1aXJlKFwiQHN0YWJsZWxpYi9yYW5kb21cIik7XG4vLyBAdHMtZXhwZWN0LWVycm9yIC0tIGV0aGVycyB2NiBjb21wYXRpYmlsaXR5IGhhY2tcbmNvbnN0IGV0aGVyc18xID0gcmVxdWlyZShcImV0aGVyc1wiKTtcbmNvbnN0IGV0aGVyc0NvbXBhdF8xID0gcmVxdWlyZShcIi4vZXRoZXJzQ29tcGF0XCIpO1xuY29uc3QgRUlQMTI3MV9BQkkgPSBbXG4gICAgJ2Z1bmN0aW9uIGlzVmFsaWRTaWduYXR1cmUoYnl0ZXMzMiBfbWVzc2FnZSwgYnl0ZXMgX3NpZ25hdHVyZSkgcHVibGljIHZpZXcgcmV0dXJucyAoYnl0ZXM0KScsXG5dO1xuY29uc3QgRUlQMTI3MV9NQUdJQ1ZBTFVFID0gJzB4MTYyNmJhN2UnO1xuY29uc3QgSVNPODYwMSA9IC9eKD88ZGF0ZT5bMC05XXs0fS0oMFsxLTldfDFbMDEyXSktKDBbMS05XXxbMTJdWzAtOV18M1swMV0pKVtUdF0oWzAxXVswLTldfDJbMC0zXSk6KFswLTVdWzAtOV0pOihbMC01XVswLTldfDYwKSguWzAtOV0rKT8oKFtael0pfChbK3wtXShbMDFdWzAtOV18MlswLTNdKTpbMC01XVswLTldKSkkLztcbi8qKlxuICogVGhpcyBtZXRob2QgY2FsbHMgdGhlIEVJUC0xMjcxIG1ldGhvZCBmb3IgU21hcnQgQ29udHJhY3Qgd2FsbGV0c1xuICogQHBhcmFtIG1lc3NhZ2UgVGhlIEVJUC00MzYxIHBhcnNlZCBtZXNzYWdlXG4gKiBAcGFyYW0gcHJvdmlkZXIgV2ViMyBwcm92aWRlciBhYmxlIHRvIHBlcmZvcm0gYSBjb250cmFjdCBjaGVjayAoV2ViMy9FdGhlcnNKUykuXG4gKiBAcmV0dXJucyB7UHJvbWlzZTxib29sZWFuPn0gQ2hlY2tzIGZvciB0aGUgc21hcnQgY29udHJhY3QgKGlmIGl0IGV4aXN0cykgaWZcbiAqIHRoZSBzaWduYXR1cmUgaXMgdmFsaWQgZm9yIGdpdmVuIGFkZHJlc3MuXG4gKi9cbmNvbnN0IGNoZWNrQ29udHJhY3RXYWxsZXRTaWduYXR1cmUgPSAobWVzc2FnZSwgc2lnbmF0dXJlLCBwcm92aWRlcikgPT4gX19hd2FpdGVyKHZvaWQgMCwgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7XG4gICAgaWYgKCFwcm92aWRlcikge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIGNvbnN0IHdhbGxldENvbnRyYWN0ID0gbmV3IGV0aGVyc18xLkNvbnRyYWN0KG1lc3NhZ2UuYWRkcmVzcywgRUlQMTI3MV9BQkksIHByb3ZpZGVyKTtcbiAgICBjb25zdCBoYXNoZWRNZXNzYWdlID0gKDAsIGV0aGVyc0NvbXBhdF8xLmhhc2hNZXNzYWdlKShtZXNzYWdlLnByZXBhcmVNZXNzYWdlKCkpO1xuICAgIGNvbnN0IHJlcyA9IHlpZWxkIHdhbGxldENvbnRyYWN0LmlzVmFsaWRTaWduYXR1cmUoaGFzaGVkTWVzc2FnZSwgc2lnbmF0dXJlKTtcbiAgICByZXR1cm4gcmVzID09PSBFSVAxMjcxX01BR0lDVkFMVUU7XG59KTtcbmV4cG9ydHMuY2hlY2tDb250cmFjdFdhbGxldFNpZ25hdHVyZSA9IGNoZWNrQ29udHJhY3RXYWxsZXRTaWduYXR1cmU7XG4vKipcbiAqIFRoaXMgbWV0aG9kIGxldmVyYWdlcyBhIG5hdGl2ZSBDU1BSTkcgd2l0aCBzdXBwb3J0IGZvciBib3RoIGJyb3dzZXIgYW5kIE5vZGUuanNcbiAqIGVudmlyb25tZW50cyBpbiBvcmRlciBnZW5lcmF0ZSBhIGNyeXB0b2dyYXBoaWNhbGx5IHNlY3VyZSBub25jZSBmb3IgdXNlIGluIHRoZVxuICogU2l3ZU1lc3NhZ2UgaW4gb3JkZXIgdG8gcHJldmVudCByZXBsYXkgYXR0YWNrcy5cbiAqXG4gKiA5NiBiaXRzIGhhcyBiZWVuIGNob3NlbiBhcyBhIG51bWJlciB0byBzdWZmaWNpZW50bHkgYmFsYW5jZSBzaXplIGFuZCBzZWN1cml0eSBjb25zaWRlcmF0aW9uc1xuICogcmVsYXRpdmUgdG8gdGhlIGxpZmVzcGFuIG9mIGl0J3MgdXNhZ2UuXG4gKlxuICogQHJldHVybnMgY3J5cHRvZ3JhcGhpY2FsbHkgZ2VuZXJhdGVkIHJhbmRvbSBub25jZSB3aXRoIDk2IGJpdHMgb2YgZW50cm9weSBlbmNvZGVkIHdpdGhcbiAqIGFuIGFscGhhbnVtZXJpYyBjaGFyYWN0ZXIgc2V0LlxuICovXG5jb25zdCBnZW5lcmF0ZU5vbmNlID0gKCkgPT4ge1xuICAgIGNvbnN0IG5vbmNlID0gKDAsIHJhbmRvbV8xLnJhbmRvbVN0cmluZ0ZvckVudHJvcHkpKDk2KTtcbiAgICBpZiAoIW5vbmNlIHx8IG5vbmNlLmxlbmd0aCA8IDgpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdFcnJvciBkdXJpbmcgbm9uY2UgY3JlYXRpb24uJyk7XG4gICAgfVxuICAgIHJldHVybiBub25jZTtcbn07XG5leHBvcnRzLmdlbmVyYXRlTm9uY2UgPSBnZW5lcmF0ZU5vbmNlO1xuLyoqXG4gKiBUaGlzIG1ldGhvZCBtYXRjaGVzIHRoZSBnaXZlbiBkYXRlIHN0cmluZyBhZ2FpbnN0IHRoZSBJU08tODYwMSByZWdleCBhbmQgYWxzb1xuICogcGVyZm9ybXMgY2hlY2tzIGlmIGl0J3MgYSB2YWxpZCBkYXRlLlxuICogQHBhcmFtIGlucHV0RGF0ZSBhbnkgc3RyaW5nIHRvIGJlIHZhbGlkYXRlZCBhZ2FpbnN0IElTTy04NjAxXG4gKiBAcmV0dXJucyBib29sZWFuIGluZGljYXRpbmcgaWYgdGhlIHByb3ZpZGFkZSBkYXRlIGlzIHZhbGlkIGFuZCBjb25mb3JtYW50IHRvIElTTy04NjAxXG4gKi9cbmNvbnN0IGlzVmFsaWRJU084NjAxRGF0ZSA9IChpbnB1dERhdGUpID0+IHtcbiAgICAvKiBTcGxpdCBncm91cHMgYW5kIG1ha2Ugc3VyZSBpbnB1dERhdGUgaXMgaW4gSVNPODYwMSBmb3JtYXQgKi9cbiAgICBjb25zdCBpbnB1dE1hdGNoID0gSVNPODYwMS5leGVjKGlucHV0RGF0ZSk7XG4gICAgLyogaWYgaW5wdXRNYXRjaCBpcyBudWxsIHRoZSBkYXRlIGlzIG5vdCBJU08tODYwMSAqL1xuICAgIGlmICghaW5wdXREYXRlKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgLyogQ3JlYXRlcyBhIGRhdGUgb2JqZWN0IHdpdGggaW5wdXQgZGF0ZSB0byBwYXJzZSBmb3IgaW52YWxpZCBkYXlzIGUuZy4gRmViLCAzMCAtPiBNYXIsIDAxICovXG4gICAgY29uc3QgaW5wdXREYXRlUGFyc2VkID0gbmV3IERhdGUoaW5wdXRNYXRjaC5ncm91cHMuZGF0ZSkudG9JU09TdHJpbmcoKTtcbiAgICAvKiBHZXQgZ3JvdXBzIGZyb20gbmV3IHBhcnNlZCBkYXRlIHRvIGNvbXBhcmUgd2l0aCB0aGUgb3JpZ2luYWwgaW5wdXQgKi9cbiAgICBjb25zdCBwYXJzZWRJbnB1dE1hdGNoID0gSVNPODYwMS5leGVjKGlucHV0RGF0ZVBhcnNlZCk7XG4gICAgLyogQ29tcGFyZSByZW1haW5pbmcgZmllbGRzICovXG4gICAgcmV0dXJuIGlucHV0TWF0Y2guZ3JvdXBzLmRhdGUgPT09IHBhcnNlZElucHV0TWF0Y2guZ3JvdXBzLmRhdGU7XG59O1xuZXhwb3J0cy5pc1ZhbGlkSVNPODYwMURhdGUgPSBpc1ZhbGlkSVNPODYwMURhdGU7XG5jb25zdCBjaGVja0ludmFsaWRLZXlzID0gKG9iaiwga2V5cykgPT4ge1xuICAgIGNvbnN0IGludmFsaWRLZXlzID0gW107XG4gICAgT2JqZWN0LmtleXMob2JqKS5mb3JFYWNoKGtleSA9PiB7XG4gICAgICAgIGlmICgha2V5cy5pbmNsdWRlcyhrZXkpKSB7XG4gICAgICAgICAgICBpbnZhbGlkS2V5cy5wdXNoKGtleSk7XG4gICAgICAgIH1cbiAgICB9KTtcbiAgICByZXR1cm4gaW52YWxpZEtleXM7XG59O1xuZXhwb3J0cy5jaGVja0ludmFsaWRLZXlzID0gY2hlY2tJbnZhbGlkS2V5cztcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/siwe/dist/utils.js\n");

/***/ })

};
;